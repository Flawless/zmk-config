/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    combos {
        compatible = "zmk,combos";

        combo_qwerty {
            bindings = <&tog 4>;
            key-positions = <38 43>;
            layers = <2>;
        };

        mitosis_combo {
            bindings = <&tog 0>;
            key-positions = <43 38>;
            layers = <5>;
        };

        adj_layer_combo {
            bindings = <&mo 2>;
            key-positions = <40 41>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
 &kp TAB  &kp GRAVE      &kp Q    &kp P              &kp Y               &kp C      &kp B           &kp V      &kp M           &kp U     &kp Z   &kp L  &kp BACKSPACE  &kp DEL
          &kp LCTRL      &kp A    &kp N              &kp I               &kp S      &kp F           &kp D      &kp T           &kp H     &kp O   &kp R  &mt RCTRL SQT
           &kp LALT  &kp COMMA  &kp DOT              &kp J               &kp G  &kp SLASH   &kp SEMICOLON      &kp W           &kp K  &kp APOS   &kp X       &kp BSLH
                                         &mt LEFT_META ESC  &mt LEFT_CONTROL E      &mo 1  &mt LSHIFT RET  &kp SPACE  &kp RIGHT_META
            >;
        };

        raise_layer {
            bindings = <
 &kp K_PLAY_PAUSE     &kp K_VOL_UP  &kp AMPERSAND  &kp PERCENT    &kp UP   &kp CARET       &kp PIPE      &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS        &kp PG_UP  &kp PRINTSCREEN
                   &mt LCTRL EQUAL         &kp AT     &kp LEFT  &kp DOWN   &kp RIGHT       &kp HASH  &kp LEFT_PARENTHESIS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp PLUS  &mt RCTRL K_APP
                      &kp K_VOL_DN      &kp ASTRK    &kp UNDER  &kp EXCL  &kp DOLLAR  &kp BACKSLASH        &kp LEFT_BRACE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &trans        &kp PG_DN
                                                                  &trans      &trans         &trans           &lt 2 ENTER  &kp NUMBER_0        &trans
            >;
        };

        adjust_layer {
            bindings = <
 &reset  &bootloader         &none         &none         &none         &none         &none      &kp RIGHT_BRACKET  &kp F7  &kp F8  &kp F9  &kp F10  &bootloader  &reset
          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp RIGHT_PARENTHESIS  &kp F4  &kp F5  &kp F6  &kp F11   &bt BT_CLR
             &kp F14         &none         &none         &none         &none         &none        &kp RIGHT_BRACE  &kp F1  &kp F2  &kp F3  &kp F12      &kp F13
                                                         &none         &none        &trans                 &trans   &none   &none
            >;
        };

        qw_layer {
            bindings = <
 &kp LEFT_META     &kp GRAVE   &kp Q   &kp W    &kp E   &kp R      &kp T               &kp Y      &kp U          &kp I    &kp O      &kp P  &kp LEFT_BRACKET  &mt RIGHT_META RIGHT_BRACKET
                   &kp LCTRL   &kp A   &kp S    &kp D   &kp F      &kp G               &kp H      &kp J          &kp K    &kp L   &kp SEMI         &kp RCTRL
                &kp LEFT_ALT   &kp Z   &kp X    &kp C   &kp V      &kp B               &kp N      &kp M      &kp COMMA  &kp DOT  &kp SLASH     &kp BACKSLASH
                                              &kp TAB  &trans  &lt 4 ESC  &mt LEFT_SHIFT RET  &kp SPACE  &kp BACKSPACE
            >;
        };

        qw_raise_layer {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        qw_lower_layer {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
